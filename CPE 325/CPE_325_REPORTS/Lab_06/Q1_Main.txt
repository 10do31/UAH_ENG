
; .ref	Debounce.
; .ref	SW1_sub.
;-------------------------------------------------------------------------------
; Main loop here
;-------------------------------------------------------------------------------
Setup:      
			; Set Inputs: P1.0 and P1.1.
			bic.b 	#003h, &P1DIR 

			; Set Outputs: P2.1 and P2.2.
            bis.b 	#006h, &P2DIR			; LED 1(0x0004), LED 2(0x0002).			 
			
            bic.b 	#0xFF, &P2OUT         ; Set P20UT to 0000_00FF (LED 1 and LED2 are both off).
            bis.w 	#GIE, SR              ; Enable global interrupts.
            bis.b 	#003h, &P1IES         ; Set interrupts to call from hi to low (SW1 and SW2).
            bis.b 	#003h, &P1IE          ; Enable port interrupts from bit 0.
			bic.b 	#003h, &P1IFG         ; Clear interrupt flag.
			
InfLoop:    jmp $							; Loop until interrupt.
;-------------------------------------------------------------------------------
; P1_0 (SW1) Interrupt Service Routine (ISR)
;-------------------------------------------------------------------------------
Port1_ISR:  
			bic.w 	#GIE, SR              	; Disable interrupts while executing subroutine
			bit.b 	#001h, &P1IFG         	; Check interrupts - SW1.
			jnz 	chkS1					; If not zero, jump to check switch 1 press.
			bit.b 	#002h, &P1IFG         	; Check interrupts - SW2.
			jnz 	chkS2					; If not zero, jump to check switch 2 press.
			;bic.b 	#0xFF, &P1IFG         	; Clear P1IFG.
			;jmp 	ISR_exit
			
chkS1:      bit.b 	#001h, &P1IN        	; Check if SW1 is pressed (0000_0001 on P1IN).
			jnz 	l_exit              	; If not zero, SW1 is not pressed, re-check after loop.
			
			call	#Debounce				; Call Debounce subroutine.
			
            bit.b 	#001h, &P1IN          	; Verify SW1 is still pressed.
            jnz 	l_exit                	; if not, wait until pressed.
			
            call 	#SW1_sub                ; Call SW1 subroutine.
			
            bis.b 	#002h, &P2OUT         	;
            bic.b 	#001h, &P1IFG         	; Clear interrupt flag for SW1.
            jmp 	l_exit                	;
			
chkS2:      bit.b 	#002h, &P1IN          	; Check if SW2 is pressed (0000_0002 on P1IN).
            jnz 	l_exit              	; If not zero, SW2 is not pressed, re-check after loop.
			
			call	#Debounce				; Call Debounce subroutine.
			
            bit.b 	#002h, &P1IN          	; Verify SW2 is still pressed.
            jnz 	l_exit              	; if not, wait until pressed.
			
LEDon:      bis.b 	#002h, &P2OUT         	; Turn on LED 2.
            bic.b 	#002h, &P1IFG         	; Clear interrupt flag for SW2.
			
l_exit:		reti                        	; Return from interrupt.
